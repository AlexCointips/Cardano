module Cardano.Chain.Common.SharedSeed
       ( SharedSeed (..)
       ) where

import           Cardano.Prelude

import           Data.Aeson (FromJSON (..), ToJSON (..))
import           Data.ByteString.Base64.Type (getByteString64, makeByteString64)

-- | This is a shared seed used for follow-the-satoshi. This seed is
-- randomly generated by each party and eventually they agree on the
-- same value.
newtype SharedSeed = SharedSeed
  { getSharedSeed :: ByteString
  } deriving (Show, Eq, Ord)

instance ToJSON SharedSeed where
  toJSON = toJSON . makeByteString64 . getSharedSeed

instance FromJSON SharedSeed where
  parseJSON v = SharedSeed . getByteString64 <$> parseJSON v
